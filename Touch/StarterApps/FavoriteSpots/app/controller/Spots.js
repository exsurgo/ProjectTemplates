/*
 * File: app/controller/Spots.js
 *
 * This file was generated by Sencha Architect version 2.3.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Spots', {
    extend: 'Ext.app.Controller',

    config: {
        models: [
            'Spot'
        ],
        stores: [
            'Spots'
        ],

        refs: {
            mapView: {
                selector: 'mainview #map',
                xtype: 'Ext.Map'
            },
            mainView: {
                selector: 'mainview',
                xtype: 'Ext.navigation.View'
            },
            mapPanel: {
                selector: 'mainview #mapPanel',
                xtype: 'Ext.Panel'
            },
            addSpotButton: {
                selector: 'mainview #addSpotButton',
                xtype: 'Ext.Button'
            },
            listSpotsButton: {
                selector: 'mainview #listSpotsButton',
                xtype: 'Ext.Button'
            }
        },

        control: {
            "mainview #addSpotButton": {
                tap: 'onAddSpotTap'
            },
            "mainview #listPanel list": {
                disclose: 'onLocationTap'
            },
            "mainview #listSpotsButton": {
                tap: 'onListSpotsTap'
            },
            "mainview": {
                back: 'onBack'
            }
        }
    },

    onAddSpotTap: function(button, e, eOpts) {
        this.getMainView().push({
            xtype: 'formpanel',
            title: 'New favorite spot'
        });
        
        this.getAddSpotButton().hide();
        this.getListSpotsButton().hide();
    },

    onLocationTap: function(list, record, target, index, e, eOpts) {
        var latitude = record.get('latitude'),    // Build the location
            longitude = record.get('longitude'),
            location = new google.maps.LatLng(latitude, longitude),
            map = this.getMapView();              // Find the map
        
        debugger;
        
        map.setMapOptions({   // Move to the center
            center: location
        });
        
        this.getDropPinButton().show();   // Show buttons
        this.getListPinsButton().show();
        
        this.getMainView().pop();   // Remove the pin list panel
    },

    onListSpotsTap: function(button, e, eOpts) {
        this.getMainView().push({   // Show the list panel view
            xtype: 'listpanel',
            title: 'Pin list'
        });
        
        this.getAddSpotButton().hide();   // Hide the buttons
        this.getListSpotsButton().hide();
    },

    onBack: function(navigationview, eOpts) {
        this.getAddSpotButton().show();
        this.getListSpotsButton().show();
    }

});
/*
 * File: app/view/MainView.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MainView', {
    extend: 'Ext.container.Viewport',

    itemId: 'mainView',
    layout: {
        type: 'border'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    region: 'center',
                    itemId: 'center',
                    layout: {
                        type: 'fit'
                    },
                    title: 'HTML Editor',
                    items: [
                        {
                            xtype: 'htmleditor',
                            width: 150,
                            listeners: {
                                beforerender: {
                                    fn: me.onHtmleditorBeforeRender,
                                    scope: me
                                }
                            }
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            style: '{background-color: #157FCC;}',
                            layout: {
                                pack: 'end',
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    action: 'reset',
                                    text: 'Reset'
                                },
                                {
                                    xtype: 'button',
                                    action: 'preview',
                                    text: 'Preview'
                                },
                                {
                                    xtype: 'button',
                                    action: 'submit',
                                    itemId: 'submitButton',
                                    text: 'Submit'
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    region: 'west',
                    split: true,
                    html: '',
                    itemId: 'previewPane',
                    width: 300,
                    bodyPadding: 10,
                    collapsible: true,
                    title: 'Preview Pane',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            style: '{background-color: #157FCC;}',
                            width: 150,
                            layout: {
                                pack: 'end',
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    action: 'resetPreview',
                                    text: 'Reset'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onHtmleditorBeforeRender: function(component, eOpts) {
        //add a width property to the qtips to ensure
        //a proper display,
        for (var button in component.buttonTips) {
            component.buttonTips[button].width = 200;
        }

    }

});
/*
 * File: app/controller/Maps.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Maps', {
    extend: 'Ext.app.Controller',

    config: {
        models: [
            'Location'
        ],
        stores: [
            'Locations'
        ],

        refs: {
            mapView: {
                selector: 'mainview #map',
                xtype: 'Ext.Map'
            },
            mainView: {
                selector: 'mainview',
                xtype: 'Ext.navigation.View'
            },
            mapPanel: {
                selector: 'mainview #mapPanel',
                xtype: 'Ext.Panel'
            },
            dropPinButton: {
                selector: 'mainview #dropPinButton',
                xtype: 'Ext.Button'
            },
            listPinsButton: {
                selector: 'mainview #listPinsButton',
                xtype: 'Ext.Button'
            }
        },

        control: {
            "mainview #dropPinButton": {
                tap: 'onDropPinTap'
            },
            "mainview #listPanel list": {
                disclose: 'onLocationTap'
            },
            "mainview #listPinsButton": {
                tap: 'onListPinsTap'
            },
            "mainview": {
                back: 'onBack'
            }
        }
    },

    onDropPinTap: function(button, e, eOpts) {
        var map = this.getMapView().getMap(),  // Get the Map
            position = map.getCenter(),        // Find the center
            marker = new google.maps.Marker({  // Build the marker
        		position: position,
        		map: map,
                animation: google.maps.Animation.DROP
            }),
            store = Ext.getStore('Locations'); // Find the store

        store.add({                            // Add lat/long to store
            latitude: position.lat(),
            longitude: position.lng()
        });
    },

    onLocationTap: function(list, record, target, index, e, eOpts) {
        var latitude = record.get('latitude'),    // Build the location
            longitude = record.get('longitude'),
            location = new google.maps.LatLng(latitude, longitude),
            map = this.getMapView();              // Find the map

        map.setMapOptions({   // Move to the center
            center: location
        });

        this.getDropPinButton().show();   // Show buttons
        this.getListPinsButton().show();

        this.getMainView().pop();   // Remove the pin list panel
    },

    onListPinsTap: function(button, e, eOpts) {
        this.getMainView().push({   // Show the list panel view
            xtype: 'listpanel',
            title: 'Pin list'
        });

        this.getDropPinButton().hide();   // Hide the buttons
        this.getListPinsButton().hide();
    },

    onBack: function(navigationview, eOpts) {
        this.getDropPinButton().show();   // Show the buttons
        this.getListPinsButton().show();
    }

});